<template>
  <!--
    Show how to customize the window flags with 'flags'.
    When specifying a 'modal' dialog, use window-modality
    to change the default 'ApplicationModal' to 'WindowModal'
    if you don't want to block input to other windows.
  -->
  <qdialog
    modal
    :flags="Qt.FramelessWindowHint"
    :window-modality="Qt.WindowModal"
    @accepted="accepted"
    @rejected="rejected"
  >
    <label text="Select elements" />
    <treeview>
      <qstandarditemmodel>
        <standarditem
          v-for="item in items"
          :text="item"
        />
      </qstandarditemmodel>
      <qitemselectionmodel
        @selection-changed="selection_changed"
      />
    </treeview>
    <dialogbuttonbox
      :buttons="('Ok', 'Cancel')"
      @accepted="lambda: element.accepted.emit()"
      @rejected="lambda: element.rejected.emit()"
    />
  </qdialog>
</template>

<script>
from PySide6.QtCore import Qt
import collagraph as cg


class ListDialog(cg.Component):
    def __init__(self, props):
        super().__init__(props)
        self.state["selected"] = -1

    def accepted(self):
        self.emit('accepted', self.state['selected'])
        self.emit('finished')

    def rejected(self):
        self.emit('rejected')
        self.emit('finished')

    def selection_changed(self, new, old):
        indexes = new.indexes()
        index = -1
        if indexes:
            index = indexes[0].row()
        self.state['selected'] = index
</script>
